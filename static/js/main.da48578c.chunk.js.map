{"version":3,"sources":["context/user-context.js","components/Container/Container.js","pages/AboutPage/AboutPage.js","components/Button/Button.js","pages/ErrorPage/ErrorPage.js","components/Footer/Footer.js","components/Nav/Nav.js","components/Header/Header.js","constants/api.js","service/fetchData.js","components/Alert/Alert.js","components/Spinner/Spinner.js","pages/HomePage/HomePage.js","components/ContentContainer/ContentContainer.js","utils/formValidation.js","components/Input/Input.js","components/Form/Form.js","pages/LoginPage/LoginPage.js","components/PrivateRoute/PrivateRoute.js","pages/ProfilePage/ProfilePage.js","pages/RegistrationPage/RegistrationPage.js","components/Modal/Modal.js","components/UserItem/UserItem.js","pages/UsersPage/UsersPage.js","App.js","index.js"],"names":["UserContext","createContext","UserProvider","children","useState","user","setUser","users","setUsers","value","isLoggedIn","setIsLoggedIn","Provider","Container","className","AboutPage","Button","title","to","history","useHistory","onClick","push","ErrorPage","Footer","href","target","rel","alt","adminLinks","path","name","description","userLinks","Nav","isOpen","setIsOpen","openClass","useContext","links","role","includes","map","link","Header","toggleOpen","prevState","email","API_BASE_URL","HTTP_METHODS","loginURL","logoutURL","getAllUsersURL","deleteUserURL","updatedUserURL","registerUserURL","fetchData","method","body","a","options","headers","credentials","fetch","response","json","data","Alert","message","successStyle","success","Spinner","HomePage","error","setError","isLoading","setIsLoading","handleLogout","res","ok","ContentContainer","formValidation","inputValues","formType","isValid","validationAlerts","password","repeatPassword","Boolean","Object","keys","length","validationArray","test","type","validateEmail","match","validatePassword","validatePasswordRepeat","every","validation","forEach","Input","handleOnChange","warning","warningClass","placeholder","onChange","e","Form","setInputValues","alerts","setAlerts","preventDefault","handleSubmit","JSON","stringify","URL","onSubmit","noValidate","lastName","LoginPage","PrivateRoute","Component","component","rest","render","ProfilePage","RegistartionPage","Modal","id","toggleModal","alert","setAlert","successAlert","setSuccessAlert","handleInputChange","then","catch","console","warn","modal","createPortal","document","querySelector","UserItem","index","prev","handleDeleteUser","data-tooltip","disabled","UsersPage","useEffect","App","basename","process","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.da48578c.chunk.js","sourcesContent":["import { createContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n\tconst [user, setUser] = useState(null);\r\n\tconst [users, setUsers] = useState([]);\r\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n\tconst value = { user, setUser, isLoggedIn, setIsLoggedIn, users, setUsers };\r\n\r\n\treturn <UserContext.Provider value={value}>{children}</UserContext.Provider>;\r\n};\r\n\r\nexport default UserProvider;\r\n\r\nUserProvider.propTypes = {\r\n\tchildren: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => {\r\n\treturn <main className='container'>{children}</main>;\r\n};\r\n\r\nexport default Container;\r\n\r\nContainer.propTypes = {\r\n\tchildren: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n};\r\n","import Container from '../../components/Container/Container';\r\n\r\nconst AboutPage = () => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<p>About page</p>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default AboutPage;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { useHistory } from 'react-router';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ title, to }) => {\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<button className='button' onClick={() => history.push(to)}>\r\n\t\t\t{title}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tto: PropTypes.string,\r\n};\r\n","import Button from '../../components/Button/Button';\r\nimport Container from '../../components/Container/Container';\r\n\r\nimport './ErrorPage.scss';\r\n\r\nconst ErrorPage = () => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<p className='error'>Ups... There is no site in here!</p>\r\n\t\t\t<Button title='home' to='/' />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ErrorPage;\r\n","import './Footer.scss';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<div className='footer'>\r\n\t\t\t<p>By Piotr Dyrda</p>\r\n\t\t\t<div className='footer__links'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref='https://www.linkedin.com/in/dyrda-piotr/'\r\n\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\trel='noreferrer'\r\n\t\t\t\t\t\talt='github-logo'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='fab fa-linkedin'></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<a href='https://github.com/dyrpit' target='_blank' rel='noreferrer' alt='github-logo'>\r\n\t\t\t\t\t\t<i className='fab fa-github'></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import PropTypes from 'prop-types';\r\nimport { useContext } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../../context/user-context';\r\n\r\nimport './Nav.scss';\r\n\r\nconst adminLinks = [\r\n\t{ path: '/users', name: 'users', description: 'See all users' },\r\n\t{ path: '/profile', name: 'profile', description: 'See user profile' },\r\n\t{\r\n\t\tpath: '/about',\r\n\t\tname: 'about',\r\n\t\tdescription: 'Read about project & author',\r\n\t},\r\n];\r\n\r\nconst userLinks = [\r\n\t{ path: '/profile', name: 'profile', description: 'See user profile' },\r\n\t{\r\n\t\tpath: '/about',\r\n\t\tname: 'about',\r\n\t\tdescription: 'Read about project & author',\r\n\t},\r\n];\r\n\r\nconst Nav = ({ isOpen, setIsOpen }) => {\r\n\tconst openClass = isOpen ? '--open' : '';\r\n\r\n\tconst { user } = useContext(UserContext);\r\n\r\n\tconst links = user && user.role.includes('admin') ? adminLinks : userLinks;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div onClick={setIsOpen} className={`nav-background nav-background${openClass}`}></div>\r\n\t\t\t<nav className={`nav nav${openClass}`}>\r\n\t\t\t\t<ul className='nav__items'>\r\n\t\t\t\t\t{links.map((link) => (\r\n\t\t\t\t\t\t<li key={link.name} className='nav__item'>\r\n\t\t\t\t\t\t\t<Link onClick={setIsOpen} className='nav__item__link' to={link.path}>\r\n\t\t\t\t\t\t\t\t{link.name}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<div className='nav__item__description'>{link.description}</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Nav;\r\n\r\nNav.propTypes = {\r\n\tisOpen: PropTypes.bool,\r\n\tsetIsOpen: PropTypes.func,\r\n};\r\n","import { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { UserContext } from '../../context/user-context';\r\n\r\nimport Nav from '../Nav/Nav';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\r\n\tconst { user } = useContext(UserContext);\r\n\r\n\tconst openClass = isOpen ? '--open' : '';\r\n\r\n\tconst toggleOpen = () => {\r\n\t\tsetIsOpen((prevState) => !prevState);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<Nav isOpen={isOpen} setIsOpen={toggleOpen} />\r\n\t\t\t<div onClick={toggleOpen} className={`menu menu${openClass}`}>\r\n\t\t\t\t<div className='menu__bar'></div>\r\n\t\t\t\t<div className='menu__bar'></div>\r\n\t\t\t\t<div className='menu__bar'></div>\r\n\t\t\t</div>\r\n\t\t\t<div className='header__user'>\r\n\t\t\t\t<p>{!user ? 'No user logged in' : `Logged as ${user?.name || user.email}`}</p>\r\n\t\t\t\t<Link to='/profile'>\r\n\t\t\t\t\t<i className='fas fa-user'></i>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","// export const API_BASE_URL = 'http://localhost:3000/';\r\nexport const API_BASE_URL = 'https://pharmacy-rest.herokuapp.com/';\r\n\r\nexport const HTTP_METHODS = {\r\n\tGET: 'GET',\r\n\tPOST: 'POST',\r\n\tPUT: 'PUT',\r\n\tDELETE: 'DELETE',\r\n\tPATCH: 'PATCH',\r\n};\r\n\r\nexport const loginURL = `${API_BASE_URL}auth/login`;\r\nexport const logoutURL = `${API_BASE_URL}auth/logout`;\r\nexport const getAllUsersURL = `${API_BASE_URL}admin/all-users`;\r\nexport const deleteUserURL = `${API_BASE_URL}admin/delete-user`;\r\nexport const updatedUserURL = `${API_BASE_URL}admin/update-user`;\r\nexport const registerUserURL = `${API_BASE_URL}user/register`;\r\n","export const fetchData = async (method, path, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tcredentials: 'include',\r\n\t\tbody: body || null,\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst response = await fetch(`${path}`, options);\r\n\t\tconst data = await response.json();\r\n\r\n\t\treturn data;\r\n\t} catch (e) {\r\n\t\treturn e;\r\n\t}\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ message, success }) => {\r\n\tconst successStyle = success ? 'alert--success' : '';\r\n\r\n\treturn (\r\n\t\t<div className={`alert ${successStyle}`}>\r\n\t\t\t<p className='alert__message'>{message}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Alert;\r\n\r\nAlert.propTypes = {\r\n\tmessage: PropTypes.string,\r\n\tsuccess: PropTypes.bool,\r\n};\r\n","import './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n\treturn <div className='spinner'></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import { useContext, useState } from 'react';\r\n\r\nimport { UserContext } from '../../context/user-context';\r\n\r\nimport { HTTP_METHODS, logoutURL } from '../../constants/api';\r\nimport { fetchData } from '../../service/fetchData';\r\n\r\nimport Alert from '../../components/Alert/Alert';\r\nimport Button from '../../components/Button/Button';\r\nimport Container from '../../components/Container/Container';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nimport './HomePage.scss';\r\n\r\nconst HomePage = () => {\r\n\tconst [error, setError] = useState('');\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst { isLoggedIn, setIsLoggedIn, setUser, setUsers } = useContext(UserContext);\r\n\r\n\tconst handleLogout = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tconst res = await fetchData(HTTP_METHODS.GET, logoutURL);\r\n\r\n\t\tif (res.ok) {\r\n\t\t\tsetIsLoggedIn(false);\r\n\t\t\tsetUser(null);\r\n\t\t\tsetUsers(null);\r\n\t\t} else {\r\n\t\t\tsetError(res.message);\r\n\t\t}\r\n\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<div className='home'>\r\n\t\t\t\t<div className='home__container'>\r\n\t\t\t\t\t{error && <Alert message={error} />}\r\n\t\t\t\t\t<h3 className='home__container__title'>\r\n\t\t\t\t\t\t{!isLoggedIn ? 'Sign in' : 'Already signed in'}\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t{!isLoggedIn ? (\r\n\t\t\t\t\t\t<Button title='Sign in' to='login' />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<button className='button' onClick={handleLogout}>\r\n\t\t\t\t\t\t\t{isLoading ? <Spinner /> : 'Log out'}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='home__container'>\r\n\t\t\t\t\t<h3 className='home__container__title'>Don't have an account?</h3>\r\n\t\t\t\t\t<Button title='Register' to='register' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default HomePage;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './ContentContainer.scss';\r\n\r\nconst ContentContainer = ({ children }) => {\r\n\treturn <div className='content-container'>{children}</div>;\r\n};\r\n\r\nexport default ContentContainer;\r\n\r\nContentContainer.propTypes = {\r\n\tchildren: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n};\r\n","const validateEmail = (email) => {\r\n\tlet message = '';\r\n\r\n\tif (!email) {\r\n\t\tmessage = 'Insert email';\r\n\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n\t\tmessage = 'Invalid email address';\r\n\t}\r\n\r\n\treturn { message, type: 'email' };\r\n};\r\n\r\nconst validatePassword = (password, type) => {\r\n\tlet message = '';\r\n\tconst passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\r\n\r\n\tif (!password) {\r\n\t\tmessage = 'Insert password';\r\n\t}\r\n\r\n\tif (!password.match(passwordRegex) && type === 'register') {\r\n\t\tmessage =\r\n\t\t\t'Passoword must have 8 to 15 characters, at least one lowercase and uppercase letters, one digit, one special character';\r\n\t}\r\n\r\n\treturn { message, type: 'password' };\r\n};\r\n\r\nconst validatePasswordRepeat = (password, repeatPassword) => {\r\n\tlet message = '';\r\n\r\n\tif (!repeatPassword) {\r\n\t\tmessage = 'Repeat password';\r\n\t} else if (password !== repeatPassword) {\r\n\t\tmessage = 'Passwords must be the same';\r\n\t}\r\n\r\n\treturn { message, type: 'repeatPassword' };\r\n};\r\n\r\nexport const formValidation = (inputValues, formType) => {\r\n\tconst validationAlerts = {};\r\n\tlet isValid = true;\r\n\r\n\tconst { email, password, repeatPassword } = inputValues;\r\n\r\n\tif (!Boolean(Object.keys(inputValues).length)) {\r\n\t\tvalidationAlerts.message = 'Fill up form before submit';\r\n\t\treturn { validationAlerts, isValid: false };\r\n\t}\r\n\r\n\tconst emailValidation = validateEmail(email);\r\n\tconst passwordValidation = validatePassword(password, formType);\r\n\tconst repeatPasswordValidation =\r\n\t\tformType === 'register' ? validatePasswordRepeat(password, repeatPassword) : null;\r\n\r\n\tconst validationArray = [emailValidation, passwordValidation, repeatPasswordValidation];\r\n\r\n\tisValid = validationArray.every((validation) => {\r\n\t\tif (validation == null) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn !validation.message;\r\n\t});\r\n\r\n\tvalidationArray.forEach((validation) =>\r\n\t\tvalidation && validation.message\r\n\t\t\t? (validationAlerts[validation.type] = validation.message)\r\n\t\t\t: null\r\n\t);\r\n\r\n\treturn { validationAlerts, isValid };\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Alert from '../Alert/Alert';\r\n\r\nimport './Input.scss';\r\n\r\nconst Input = ({ handleOnChange, value, type, name, title, warning }) => {\r\n\tconst warningClass = Boolean(warning) ? 'input--warning' : '';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='input__container'>\r\n\t\t\t\t<label className='label'>{title || name}</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder={title || name}\r\n\t\t\t\t\tclassName={`input ${warningClass}`}\r\n\t\t\t\t\tonChange={(e) => handleOnChange(e)}\r\n\t\t\t\t\tvalue={value || ''}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{Boolean(warning) && <Alert message={warning} />}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n\r\nInput.propTypes = {\r\n\thandleOnChange: PropTypes.func,\r\n\tvalue: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tname: PropTypes.string,\r\n\ttitle: PropTypes.string,\r\n\twarning: PropTypes.string,\r\n};\r\n","import { useContext, useState } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { HTTP_METHODS, loginURL, registerUserURL } from '../../constants/api';\r\nimport { fetchData } from '../../service/fetchData';\r\nimport { formValidation } from '../../utils/formValidation';\r\n\r\nimport { UserContext } from '../../context/user-context';\r\n\r\nimport Alert from '../Alert/Alert';\r\nimport Input from '../Input/Input';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nimport './Form.scss';\r\n\r\nconst Form = ({ type }) => {\r\n\tconst [inputValues, setInputValues] = useState({});\r\n\tconst [alerts, setAlerts] = useState({});\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst { setUser, setIsLoggedIn, isLoggedIn } = useContext(UserContext);\r\n\r\n\tconst handleOnChange = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst { value, name } = e.target;\r\n\r\n\t\tif (alerts[name]) {\r\n\t\t\tsetAlerts((prevState) => ({ ...prevState, [name]: '' }));\r\n\t\t}\r\n\r\n\t\tsetInputValues((prevState) => ({ ...prevState, [name]: value }));\r\n\t};\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst { validationAlerts, isValid } = formValidation(inputValues, type);\r\n\r\n\t\tif (!isValid) {\r\n\t\t\tsetAlerts(validationAlerts);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst body = JSON.stringify(inputValues);\r\n\r\n\t\tconst URL = type === 'register' ? registerUserURL : loginURL;\r\n\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst res = await fetchData(HTTP_METHODS.POST, URL, body);\r\n\r\n\t\t\tif (type === 'register' && res.ok) {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetAlerts({ success: 'User registered successfully!' });\r\n\t\t\t\tsetInputValues({});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (res.ok) {\r\n\t\t\t\tsetUser(res.user);\r\n\t\t\t\tsetIsLoggedIn(true);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tsetAlerts({ message: res.message });\r\n\t\t\t}\r\n\r\n\t\t\tsetIsLoading(false);\r\n\t\t} catch (e) {\r\n\t\t\tsetAlerts({ message: e.message });\r\n\t\t}\r\n\r\n\t\tsetInputValues({});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoggedIn && <Redirect to='/profile' />}\r\n\t\t\t<form className='form' onSubmit={(e) => handleSubmit(e)} noValidate>\r\n\t\t\t\t<Input\r\n\t\t\t\t\thandleOnChange={handleOnChange}\r\n\t\t\t\t\tvalue={inputValues.email || ''}\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\twarning={alerts.email || ''}\r\n\t\t\t\t/>\r\n\t\t\t\t<Input\r\n\t\t\t\t\thandleOnChange={handleOnChange}\r\n\t\t\t\t\tvalue={inputValues.password || ''}\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\twarning={alerts.password || ''}\r\n\t\t\t\t/>\r\n\t\t\t\t{type === 'register' ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\thandleOnChange={handleOnChange}\r\n\t\t\t\t\t\t\tvalue={inputValues.repeatPassword || ''}\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tname='repeatPassword'\r\n\t\t\t\t\t\t\ttitle='repeat password'\r\n\t\t\t\t\t\t\twarning={alerts.repeatPassword || ''}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\thandleOnChange={handleOnChange}\r\n\t\t\t\t\t\t\tvalue={inputValues.name || ''}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\thandleOnChange={handleOnChange}\r\n\t\t\t\t\t\t\tvalue={inputValues.lastName || ''}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\ttitle='last name'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : null}\r\n\t\t\t\t<button className='form__button' type='submit'>\r\n\t\t\t\t\t{isLoading ? <Spinner /> : type === 'register' ? 'Register' : 'Log in'}\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t\t{type === 'register' && Boolean(alerts.success) ? (\r\n\t\t\t\t<Alert success={true} message={alerts.success} />\r\n\t\t\t) : (\r\n\t\t\t\tBoolean(alerts.message) && <Alert message={alerts.message} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n\r\nForm.propTypes = {\r\n\ttype: PropTypes.string,\r\n};\r\n","import Button from '../../components/Button/Button';\r\nimport Container from '../../components/Container/Container';\r\nimport ContentContainer from '../../components/ContentContainer/ContentContainer';\r\nimport Form from '../../components/Form/Form';\r\n\r\nconst LoginPage = () => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ContentContainer>\r\n\t\t\t\t<h1 className='content-container__title'>Log in</h1>\r\n\t\t\t\t<Form />\r\n\t\t\t</ContentContainer>\r\n\t\t\t<Button title='Home' to='/' />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default LoginPage;\r\n","import { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { UserContext } from '../../context/user-context';\r\n\r\nconst PrivateRoute = ({ component: Component, role, ...rest }) => {\r\n\tconst { isLoggedIn } = useContext(UserContext);\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\trender={() => {\r\n\t\t\t\tif (!isLoggedIn) {\r\n\t\t\t\t\treturn <Redirect to='/login' />;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn <Component {...rest} />;\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\nPrivateRoute.propTypes = {\r\n\tComponent: PropTypes.element,\r\n\trole: PropTypes.string,\r\n\trest: PropTypes.node,\r\n};\r\n","import { useContext, useState } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { UserContext } from '../../context/user-context';\r\n\r\nimport { HTTP_METHODS, logoutURL } from '../../constants/api';\r\nimport { fetchData } from '../../service/fetchData';\r\n\r\nimport Alert from '../../components/Alert/Alert';\r\nimport Button from '../../components/Button/Button';\r\nimport Container from '../../components/Container/Container';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nimport './ProfilePage.scss';\r\n\r\nconst ProfilePage = () => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState('');\r\n\r\n\tconst { user, isLoggedIn, setIsLoggedIn, setUser, setUsers } = useContext(UserContext);\r\n\r\n\tconst handleLogout = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tconst res = await fetchData(HTTP_METHODS.GET, logoutURL);\r\n\r\n\t\tif (res.ok) {\r\n\t\t\tsetIsLoggedIn(false);\r\n\t\t\tsetUser(null);\r\n\t\t\tsetUsers(null);\r\n\t\t} else {\r\n\t\t\tsetError(res.message);\r\n\t\t}\r\n\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\treturn !isLoggedIn ? (\r\n\t\t<Redirect to='/login' />\r\n\t) : (\r\n\t\t<Container>\r\n\t\t\t<div className='profile'>\r\n\t\t\t\t{error && <Alert message={error} />}\r\n\t\t\t\t{user && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h1 className='profile__title'>Profile</h1>\r\n\t\t\t\t\t\t<p className='profile__user'>\r\n\t\t\t\t\t\t\t{user.name || ''} {user.lastName || ''}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<div className='profile__avatar'>\r\n\t\t\t\t\t\t\t<div className='profile__role'>{user.role}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className='profile__email'>{user.email}</p>\r\n\t\t\t\t\t\t<div className='profile__buttons'>\r\n\t\t\t\t\t\t\t<button className='button' onClick={handleLogout}>\r\n\t\t\t\t\t\t\t\t{isLoading ? <Spinner /> : 'Log out'}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<Button title='Home' to='/' />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ProfilePage;\r\n","import Button from '../../components/Button/Button';\r\nimport Container from '../../components/Container/Container';\r\nimport ContentContainer from '../../components/ContentContainer/ContentContainer';\r\nimport Form from '../../components/Form/Form';\r\n\r\nconst RegistartionPage = () => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ContentContainer>\r\n\t\t\t\t<h1 className='content-container__title'>Sign in</h1>\r\n\t\t\t\t<Form type='register' />\r\n\t\t\t</ContentContainer>\r\n\t\t\t<Button title='Home' to='/' />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default RegistartionPage;\r\n","import { useContext, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getAllUsersURL, HTTP_METHODS, updatedUserURL } from '../../constants/api';\r\nimport { fetchData } from '../../service/fetchData';\r\n\r\nimport { UserContext } from '../../context/user-context';\r\n\r\nimport Alert from '../Alert/Alert';\r\nimport Input from '../Input/Input';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nimport './Modal.scss';\r\n\r\nconst Modal = ({ id, toggleModal }) => {\r\n\tconst [inputValues, setInputValues] = useState({});\r\n\tconst [alert, setAlert] = useState('');\r\n\tconst [successAlert, setSuccessAlert] = useState('');\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst { setUsers } = useContext(UserContext);\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst { value, name } = e.target;\r\n\r\n\t\tsetInputValues((prevState) => ({ ...prevState, [name]: value }));\r\n\t};\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetAlert('');\r\n\t\tsetSuccessAlert('');\r\n\r\n\t\tif (!Boolean(Object.keys(inputValues).length)) {\r\n\t\t\tsetAlert('Nothing to update');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst body = JSON.stringify(inputValues);\r\n\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\r\n\t\t\tconst res = await fetchData(HTTP_METHODS.PATCH, `${updatedUserURL}?id=${id}`, body);\r\n\r\n\t\t\tif (res.ok) {\r\n\t\t\t\tsetSuccessAlert(res.message);\r\n\r\n\t\t\t\tfetchData(HTTP_METHODS.GET, getAllUsersURL)\r\n\t\t\t\t\t.then((res) => setUsers(res.users))\r\n\t\t\t\t\t.catch((e) => console.warn(e));\r\n\t\t\t} else {\r\n\t\t\t\tsetAlert(res.message);\r\n\t\t\t}\r\n\r\n\t\t\tsetIsLoading(false);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.warn(e);\r\n\t\t}\r\n\r\n\t\tsetInputValues({});\r\n\t};\r\n\r\n\tconst modal = (\r\n\t\t<div className={`modal__background`}>\r\n\t\t\t<div className='modal__container'>\r\n\t\t\t\t<button className='modal__close-button' onClick={toggleModal}>\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>\r\n\t\t\t\t<h2 className='modal__title'>Edit user</h2>\r\n\t\t\t\t<form className='modal__form' onSubmit={(e) => handleSubmit(e)} noValidate>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\thandleOnChange={handleInputChange}\r\n\t\t\t\t\t\tvalue={inputValues.name || ''}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\thandleOnChange={handleInputChange}\r\n\t\t\t\t\t\tvalue={inputValues.lastName || ''}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\ttitle='last name'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='input__container'>\r\n\t\t\t\t\t\t<label className='modal__input'>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tname='role'\r\n\t\t\t\t\t\t\t\tclassName='modal__select'\r\n\t\t\t\t\t\t\t\tvalue={inputValues.role}\r\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option className='modal__select__option' value=''>\r\n\t\t\t\t\t\t\t\t\tChoose role for user\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t<option className='modal__select__option' value='admin'>\r\n\t\t\t\t\t\t\t\t\tAdmin\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t<option className='modal__select__option' value='user'>\r\n\t\t\t\t\t\t\t\t\tUser\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{alert && <Alert message={alert} />}\r\n\t\t\t\t\t{successAlert && <Alert message={successAlert} success={true} />}\r\n\t\t\t\t\t<button className='form__button modal_button' type='submit'>\r\n\t\t\t\t\t\t{isLoading ? <Spinner /> : 'Change'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn createPortal(modal, document.querySelector('.modal'));\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n\tid: PropTypes.string,\r\n\ttoggleModal: PropTypes.func,\r\n};\r\n","import { useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { fetchData } from '../../service/fetchData';\r\nimport { deleteUserURL, getAllUsersURL, HTTP_METHODS } from '../../constants/api';\r\n\r\nimport { UserContext } from '../../context/user-context';\r\n\r\nimport Modal from '../Modal/Modal';\r\n\r\nimport './UserItem.scss';\r\n\r\nconst UserItem = ({ user, index }) => {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\r\n\tconst { setUsers } = useContext(UserContext);\r\n\r\n\tconst toggleModal = () => setIsOpen((prev) => !prev);\r\n\r\n\tconst handleDeleteUser = async (id) => {\r\n\t\tconst res = await fetchData(HTTP_METHODS.DELETE, `${deleteUserURL}?id=${id}`);\r\n\r\n\t\tif (res.ok) {\r\n\t\t\tfetchData(HTTP_METHODS.GET, getAllUsersURL)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetUsers(res.users);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => console.warn(e));\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<li className='list-item'>\r\n\t\t\t\t<div className='list-item__number'>{index + 1}</div>\r\n\t\t\t\t<div className='list-item__wrapper'>\r\n\t\t\t\t\t<div className='item'>\r\n\t\t\t\t\t\t<p className='item__title'>Name:</p>{' '}\r\n\t\t\t\t\t\t<span className='item__value'>{user.name || '---'}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='item'>\r\n\t\t\t\t\t\t<p className='item__title'>Last name:</p>{' '}\r\n\t\t\t\t\t\t<span className='item__value'>{user.lastName || '---'}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='item'>\r\n\t\t\t\t\t\t<p className='item__title'>Email:</p> <span className='item__value'>{user.email}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='item'>\r\n\t\t\t\t\t\t<p className='item__title'>Role:</p>\r\n\t\t\t\t\t\t<span className='item__value'>{user.role}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='list-item__buttons'>\r\n\t\t\t\t\t<button data-tooltip='Edit User' className='button' onClick={toggleModal}>\r\n\t\t\t\t\t\t<i className='fas fa-user-edit'></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tdata-tooltip='Delete User'\r\n\t\t\t\t\t\tclassName='button'\r\n\t\t\t\t\t\tonClick={() => handleDeleteUser(user.id)}\r\n\t\t\t\t\t\tdisabled={user.role === 'admin'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='fas fa-user-slash'></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t\t{isOpen && <Modal toggleModal={toggleModal} id={user.id} />}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default UserItem;\r\n\r\nUserItem.propTypes = {\r\n\tuser: PropTypes.object,\r\n\tindex: PropTypes.number,\r\n};\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport { fetchData } from '../../service/fetchData';\r\nimport { getAllUsersURL, HTTP_METHODS } from '../../constants/api';\r\n\r\nimport { UserContext } from '../../context/user-context';\r\n\r\nimport Container from '../../components/Container/Container';\r\nimport UserItem from '../../components/UserItem/UserItem';\r\n\r\nimport './UsersPage.scss';\r\n\r\nconst UsersPage = () => {\r\n\tconst { users, setUsers } = useContext(UserContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData(HTTP_METHODS.GET, getAllUsersURL)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res?.users) {\r\n\t\t\t\t\tsetUsers(res.users);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.warn(e));\r\n\t}, [setUsers]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ul className='users-list'>\r\n\t\t\t\t{users.map((user, index) => (\r\n\t\t\t\t\t<UserItem key={index} index={index} user={user} />\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default UsersPage;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport UserProvider from './context/user-context';\n\nimport AboutPage from './pages/AboutPage/AboutPage';\nimport ErrorPage from './pages/ErrorPage/ErrorPage';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport HomePage from './pages/HomePage/HomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport ProfilePage from './pages/ProfilePage/ProfilePage';\nimport RegistartionPage from './pages/RegistrationPage/RegistrationPage';\nimport UsersPage from './pages/UsersPage/UsersPage';\n\nfunction App() {\n\treturn (\n\t\t<UserProvider>\n\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/' component={HomePage} />\n\t\t\t\t\t<Route path='/profile' component={ProfilePage} />\n\t\t\t\t\t<Route path='/login' component={LoginPage} />\n\t\t\t\t\t<Route path='/register' component={RegistartionPage} />\n\t\t\t\t\t<Route path='/about' component={AboutPage} />\n\t\t\t\t\t<PrivateRoute path='/profile' role='user' component={ProfilePage} />\n\t\t\t\t\t<PrivateRoute path='/users' role='admin' component={UsersPage} />\n\t\t\t\t\t<Route path='*' component={ErrorPage} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t\t<Footer />\n\t\t</UserProvider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}